{"version":3,"sources":["webpack://Agent/webpack/universalModuleDefinition","webpack://Agent/webpack/bootstrap","webpack://Agent/./src/math/index.ts","webpack://Agent/./src/math/vector2.ts","webpack://Agent/./src/shader/index.ts","webpack://Agent/./src/math/matrix4.ts","webpack://Agent/./src/math/vector3.ts","webpack://Agent/./src/camera/orthographic.ts","webpack://Agent/./src/camera/perspective.ts","webpack://Agent/./src/camera/index.ts","webpack://Agent/./src/renderer/webGLRenderer.ts","webpack://Agent/./src/renderer/index.ts","webpack://Agent/./src/shader/shader.ts","webpack://Agent/./src/scene/scene.ts","webpack://Agent/./src/geometry/square.ts","webpack://Agent/./src/agent.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vector2_1","Vector2","vector3_1","Vector3","matrix4_1","Matrix4","Axis","toRadian","deg","rad","Math","PI","parseFloat","toFixed","toDegree","round","[object Object]","x","y","this","z","vec","TypeError","sqrt","scaler","length","Float32Array","shader_1","default","Shader","ShaderType","WebGLRenderingContext","VERTEX_SHADER","FRAGMENT_SHADER","math_1","arr","undefined","data","map","fill","dimension","setAsIdentity","right","left","top","bottom","far","near","_mat","theta","axis","X","cos","sin","Y","Z","OrthographicCamera","cameraMatrix","setAsOrthographic","PerspectiveCamera","perspective_1","orthographic_1","WebGLRenderer","options","width","height","devicePixelRatio","canvas","_glCtx","initWithOptions","scene","clear","render","style","viewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","domCanvas","document","createElementNS","body","appendChild","fullscreen","clientWidth","clientHeight","glContext","getContext","Error","clearColor","webGLRenderer_1","shaderData","uniformData","Map","attributeData","gl","type","code","tempAttr","tempUniform","tempVarying","lines","split","id","compileSource","line","endIndex","charAt","varName","substring","lastIndexOf","search","push","attributes","uniforms","varyings","ID","Attributes","Uniforms","Varyings","attName","attribute","attLocation","filter","ReferenceError","set","attributeName","attributeID","delete","uniformName","uniformLoc","uniform","uniformID","source","shaderID","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","Scene","shaders","renderables","camera","programId","programLinked","item","newShader","createProgram","setShaderSource","attachShader","shader","has","enableUniforms","gObject","enableBuffer","enableAttributes","drawArrays","TRIANGLE_STRIP","verticeCount","values","attData","newID","getAttribLocation","setAttributeIDFor","enableVertexAttribArray","vertexAttribute","vertexAttribPointer","size","FLOAT","normalized","stride","offset","attributeValue","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","getUniformLocation","setUniformIDFor","dataMatrix","uniformMatrix4fv","flatten","dataValue","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Square","bufferId","vbo","attribData","g","b","a","program","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","square_1","scene_1","renderer_1","camera_1","__export"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,MAAAD,IAEAD,EAAA,MAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,oFCjEA,IAAAC,EAAA3B,EAAA,GAASN,EAAAkC,QAAAD,EAAAC,QACT,IAAAC,EAAA7B,EAAA,GAASN,EAAAoC,QAAAD,EAAAC,QACT,IAAAC,EAAA/B,EAAA,GAASN,EAAAsC,QAAAD,EAAAC,QAGT,SAAYC,GACXA,IAAA,SACAA,IAAA,SACAA,IAAA,SAHD,CAAYvC,EAAAuC,OAAAvC,EAAAuC,UA+HZvC,EAAAwC,SAAA,SAAyBC,GACxB,MAAMC,EAAOD,EAAM,IAAO,EAAIE,KAAKC,GACnC,OAAOC,WAAWH,EAAII,QAAQ,KAQ/B9C,EAAA+C,SAAA,SAAyBL,GACxB,OAAOC,KAAKK,MAAON,GAAO,EAAIC,KAAKC,IAAO,2FC9I3CV,EAKCe,YAAYC,EAAY,EAAGC,EAAY,GACtCC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,EAAI,EAGHJ,IAAIK,GACV,OAAO,IAAIpB,EAAQoB,EAAIJ,EAAIE,KAAKF,EAAGI,EAAIH,EAAIC,KAAKD,GAG1CF,IAAIK,GACV,OAAO,IAAIpB,EAAQkB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,GAG1CF,KAAKK,GACX,OAAO,IAAIpB,EAAQkB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,GAG1CF,IAAIK,GACV,GAAc,IAAVA,EAAIJ,GAAqB,IAAVI,EAAIH,EACtB,MAAM,IAAII,sCAAsCD,EAAIJ,OAAOI,EAAIH,KAEhE,OAAO,IAAIjB,EAAQkB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,GAG1CF,IAAIK,GACV,OAAQF,KAAKF,EAAII,EAAIJ,EAAME,KAAKD,EAAIG,EAAIH,EAGlCF,SACN,OAAON,KAAKa,KAAMJ,KAAKF,EAAIE,KAAKF,EAAME,KAAKD,EAAIC,KAAKD,GAG9CF,MAAMQ,GACZ,OAAO,IAAIvB,EAAQkB,KAAKF,EAAIO,EAAQL,KAAKD,EAAIM,GAGvCR,YACN,MAAMxC,EAAI2C,KAAKM,SACf,OAAO,IAAIxB,EAAQkB,KAAKF,EAAIzC,EAAG2C,KAAKD,EAAI1C,GAGlCwC,UACN,OAAO,IAAIU,cAAcP,KAAKF,EAAGE,KAAKD,KAhDxCnD,EAAAkC,yFCDA,IAAA0B,EAAAtD,EAAA,IAASN,EAAA6D,QAAAD,EAAAE,OAET,SAAYC,GACXA,IAAA,OAASC,sBAAsBC,eAAa,SAC5CF,IAAA,SAAWC,sBAAsBE,iBAAe,WAFjD,CAAYlE,EAAA+D,aAAA/D,EAAA+D,+FCJZ,MAAA9B,EAAA3B,EAAA,GAEA6D,EAAA7D,EAAA,SAGAgC,EAGCW,YAAYmB,QACCC,IAARD,GAAoC,KAAfA,EAAIV,OAC5BN,KAAKkB,KAAOF,EAAIG,IAAK/C,GAAUA,IAG/B4B,KAAKkB,KAAO,IAAIX,aAAa,IAE7BP,KAAKkB,KAAM,GAAM,EACjBlB,KAAKkB,KAAM,GAAM,EACjBlB,KAAKkB,KAAM,IAAO,EAClBlB,KAAKkB,KAAM,IAAO,GAIbrB,gBACNG,KAAKkB,KAAKE,KAAK,GAEfpB,KAAKkB,KAAM,GAAM,EACjBlB,KAAKkB,KAAM,GAAM,EACjBlB,KAAKkB,KAAM,IAAO,EAClBlB,KAAKkB,KAAM,IAAO,EAGZrB,kBAAkBwB,GACxBrB,KAAKsB,gBAELtB,KAAKkB,KAAM,GAAM,GAAKG,EAAUE,MAAQF,EAAUG,MAClDxB,KAAKkB,KAAM,GAAM,GAAKG,EAAUI,IAAMJ,EAAUK,QAChD1B,KAAKkB,KAAM,KAAQ,GAAKG,EAAUM,IAAMN,EAAUO,MAClD5B,KAAKkB,KAAM,KAAcG,EAAUE,MAAQF,EAAUG,OAASH,EAAUE,MAAQF,EAAUG,OAAvE,EACnBxB,KAAKkB,KAAM,KAAcG,EAAUI,IAAMJ,EAAUK,SAAWL,EAAUI,IAAMJ,EAAUK,SAArE,EACnB1B,KAAKkB,KAAM,KAAcG,EAAUM,IAAMN,EAAUO,OAASP,EAAUM,IAAMN,EAAUO,OAAnE,EAGb/B,oBAIAA,MAAMQ,GACZ,IAAIP,EAAI,EACJC,EAAI,EACJE,EAAI,EACR,MAAM4B,EAAO,IAAI3C,EAAQc,KAAKkB,MAgB9B,MAdsB,iBAAXb,GACVP,EAAIO,EAAOP,EACXC,EAAIM,EAAON,EACXE,EAAII,EAAOJ,GAAK,IAEhBH,EAAIO,EACJN,EAAIM,EACJJ,EAAII,GAGLwB,EAAKX,KAAM,IAAOpB,EAClB+B,EAAKX,KAAM,IAAOnB,EAClB8B,EAAKX,KAAM,KAAQjB,EAEZ4B,EAGDhC,UAAUK,GAChB,IAAIJ,EAAI,EACJC,EAAI,EACJE,EAAI,EACR,MAAM4B,EAAO,IAAI3C,EAAQc,KAAKkB,MAiB9B,OAfIhB,aAAerB,EAAAC,SAClBgB,EAAII,EAAIJ,EACRC,EAAIG,EAAIH,EACRE,EAAI,IAGJH,EAAII,EAAIJ,EACRC,EAAIG,EAAIH,EACRE,EAAIC,EAAID,GAAK,GAGd4B,EAAKX,KAAM,KAAQpB,EACnB+B,EAAKX,KAAM,KAAQnB,EACnB8B,EAAKX,KAAM,KAAQjB,EAEZ4B,EAGDhC,OAAOiC,EAAeC,GAC5B,MAAMF,EAAO,IAAI3C,EAAQc,KAAKkB,MAE9B,OAAQa,GACP,KAAKhB,EAAA5B,KAAK6C,EACVH,EAAKX,KAAM,IAAO3B,KAAK0C,IAAIH,GAC3BD,EAAKX,KAAM,IAAO3B,KAAK2C,IAAIJ,GAC3BD,EAAKX,KAAM,KAAS3B,KAAK2C,IAAIJ,GAC7BD,EAAKX,KAAM,KAAQ3B,KAAK0C,IAAIH,GAC5B,MAEA,KAAKf,EAAA5B,KAAKgD,EACVN,EAAKX,KAAM,IAAO3B,KAAK0C,IAAIH,GAC3BD,EAAKX,KAAM,KAAS3B,KAAK2C,IAAIJ,GAC7BD,EAAKX,KAAM,IAAO3B,KAAK2C,IAAIJ,GAC3BD,EAAKX,KAAM,KAAQ3B,KAAK0C,IAAIH,GAC5B,MAEA,KAAKf,EAAA5B,KAAKiD,EACVP,EAAKX,KAAM,IAAO3B,KAAK0C,IAAIH,GAC3BD,EAAKX,KAAM,IAAO3B,KAAK2C,IAAIJ,GAC3BD,EAAKX,KAAM,KAAS3B,KAAK2C,IAAIJ,GAC7BD,EAAKX,KAAM,IAAO3B,KAAK0C,IAAIH,GAI5B,OAAOD,EAGDhC,UACN,OAAOG,KAAKkB,MAtHdtE,EAAAsC,+FCFAF,EAKCa,YAAYC,EAAY,EAAGC,EAAY,EAAGE,EAAY,GACrDD,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,EAAIA,EAGHJ,IAAIK,GACV,OAAO,IAAIlB,EAAQgB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,EAAGC,KAAKC,EAAIC,EAAID,GAG1DJ,IAAIK,GACV,OAAO,IAAIlB,EAAQgB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,EAAGC,KAAKC,EAAIC,EAAID,GAG1DJ,IAAIK,GACV,GAAc,IAAVA,EAAIJ,GAAqB,IAAVI,EAAIH,GAAqB,IAAVG,EAAID,EACrC,MAAM,IAAIE,sCAAsCD,EAAIJ,OAAOI,EAAIH,QAAQG,EAAID,KAE5E,OAAO,IAAIjB,EAAQgB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,EAAGC,KAAKC,EAAIC,EAAID,GAG1DJ,KAAKK,GACX,OAAO,IAAIlB,EAAQgB,KAAKF,EAAII,EAAIJ,EAAGE,KAAKD,EAAIG,EAAIH,EAAGC,KAAKC,EAAIC,EAAID,GAG1DJ,IAAIK,GACV,OAAQF,KAAKF,EAAII,EAAIJ,EAAME,KAAKD,EAAIG,EAAIH,EAAMC,KAAKC,EAAIC,EAAID,EAGrDJ,MAAMQ,GACZ,OAAO,IAAIrB,EAAQgB,KAAKF,EAAIO,EAAQL,KAAKD,EAAIM,EAAQL,KAAKC,EAAII,GAGxDR,YACN,MAAMxC,EAAI2C,KAAKM,SACf,OAAO,IAAItB,EAAQgB,KAAKF,EAAIzC,EAAG2C,KAAKD,EAAI1C,EAAG2C,KAAKC,EAAI5C,GAG9CwC,SACN,OAAON,KAAKa,KAAOJ,KAAKF,EAAIE,KAAKF,EAAQE,KAAKD,EAAIC,KAAKD,EAAQC,KAAKC,EAAID,KAAKC,GAGvEJ,UACN,OAAO,IAAIU,cAAcP,KAAKF,EAAGE,KAAKD,EAAGC,KAAKC,KAhDhDrD,EAAAoC,yFCHA,MAAA+B,EAAA7D,EAAA,GAaAN,EAAAyF,yBAICxC,YAAYwB,GACXrB,KAAKqB,UAAYA,EACjBrB,KAAKsC,aAAe,IAAIvB,EAAA7B,QACxBc,KAAKsC,aAAaC,kBAAkBlB,GAG9BxB,SACN,OAAOG,KAAKsC,8FCnBd1F,EAAA4F,wBAGC3C,eAIOA,SACN,OAAOG,KAAKsC,8FCXd,IAAAG,EAAAvF,EAAA,GAASN,EAAA4F,kBAAAC,EAAAD,kBACT,IAAAE,EAAAxF,EAAA,GAASN,EAAAyF,mBAAAK,EAAAL,kGCCTzF,EAAA+F,oBAOC9C,YAAY+C,GACX5C,KAAK6C,MAAQ,EACb7C,KAAK8C,OAAS,EACd9C,KAAK+C,iBAAmB,EACxB/C,KAAKgD,OAAS,KACdhD,KAAKiD,OAAS,UAEEhC,IAAZ2B,GACH5C,KAAKkD,gBAAgBN,GAIhB/C,aACN,OAAOG,KAAKiD,OAGNpD,SACN,OAAOG,KAAK6C,MAAQ7C,KAAK8C,OAGnBjD,OAAOsD,GACbnD,KAAKoD,QACLD,EAAME,OAAOrD,KAAKiD,QAGZpD,OAAOgD,EAAeC,GAC5B9C,KAAKgD,OAAOH,MAAQ7C,KAAK6C,MAAQA,EAAQ7C,KAAK+C,iBAC9C/C,KAAKgD,OAAOF,OAAS9C,KAAK8C,OAASA,EAAS9C,KAAK+C,iBAEjD/C,KAAKgD,OAAOM,MAAMT,MAAQ7C,KAAK6C,MAAQ,KACvC7C,KAAKgD,OAAOM,MAAMR,OAAS9C,KAAK8C,OAAS,KAEzC9C,KAAKiD,OAAOM,SAAS,EAAG,EAAGvD,KAAK6C,MAAO7C,KAAK8C,QAGrCjD,QACPG,KAAKiD,OAAOG,MAAMpD,KAAKiD,OAAOO,iBAAmBxD,KAAKiD,OAAOQ,kBAGtD5D,gBAAgB+C,GA0BvB,GAzBA5C,KAAK6C,MAAQD,EAAQC,MACrB7C,KAAK8C,OAASF,EAAQE,OACtB9C,KAAK+C,iBAAmB/F,OAAO+F,kBAAoB,EAE9CH,EAAQc,UAKZ1D,KAAKgD,OAASJ,EAAQc,WAJtB1D,KAAKgD,OAASW,SAASC,gBAAgB,+BAAgC,UACvED,SAASE,KAAKC,YAAY9D,KAAKgD,SAM5BJ,EAAQmB,aACX/D,KAAK6C,MAAQc,SAASE,KAAKG,YAC3BhE,KAAK8C,OAASa,SAASE,KAAKI,cAI7BjE,KAAKgD,OAAOM,MAAMT,MAAQ7C,KAAK6C,MAAQ,KACvC7C,KAAKgD,OAAOM,MAAMR,OAAS9C,KAAK8C,OAAS,KAGzC9C,KAAKgD,OAAOH,MAAQ7C,KAAK6C,MAAQ7C,KAAK+C,iBACtC/C,KAAKgD,OAAOF,OAAS9C,KAAK8C,OAAS9C,KAAK+C,iBAEnCH,EAAQsB,UASZlE,KAAKiD,OAASL,EAAQsB,eALtB,GAFAlE,KAAKiD,OAASjD,KAAKgD,OAAOmB,WAAW,WAAsCnE,KAAKgD,OAAOmB,WAAW,SAE9E,OAAhBnE,KAAKiD,OACR,MAAM,IAAImB,MAAM,gDAOlBpE,KAAKiD,OAAOM,SAAS,EAAG,EAAGvD,KAAK6C,MAAO7C,KAAK8C,QAC5C9C,KAAKiD,OAAOoB,WAAW,EAAK,EAAK,EAAK,oFCtFxC,IAAAC,EAAApH,EAAA,GAASN,EAAA+F,cAAA2B,EAAA3B,6FCUT/F,EAAA8D,aAKCb,cACCG,KAAKuE,WAAa,KAClBvE,KAAKwE,YAAc,IAAIC,IACvBzE,KAAK0E,cAAgB,IAAID,IAGnB5E,gBAAgB8E,EAA2BC,EAAkBC,GACnE,MAAMC,KACAC,KACAC,KAEAC,EAAQJ,EAAKK,MAAM,MACnBC,EAAKnF,KAAKoF,cAAcT,EAAIC,EAAMC,GAExC,IAAK,MAAMQ,KAAQJ,EAAO,CACzB,MAAMK,EAA4C,MAAjCD,EAAKE,OAAOF,EAAK/E,OAAS,GAAa+E,EAAK/E,OAAS,EAAI+E,EAAK/E,OACzEkF,EAAUH,EAAKI,UAAUJ,EAAKK,YAAY,KAAO,EAAGJ,IAEhB,IAAtCD,EAAKM,OAAO,qBACfb,EAASc,MACRjI,KAAM6H,EACNL,IAAK,KAGwC,IAApCE,EAAKM,OAAO,mBACtBZ,EAAYa,MACXjI,KAAM6H,EACNL,IAAK,KAGwC,IAApCE,EAAKM,OAAO,oBACtBX,EAAYY,MACXjI,KAAM6H,EACNL,IAAK,IAKRnF,KAAKuE,YACJY,KACAP,OACAC,OACAgB,WAAYf,EACZgB,SAAUf,EACVgB,SAAUf,GAIZgB,SACC,OAAOhG,KAAKuE,WAAWY,GAGxBc,iBACC,OAAOjG,KAAK0E,cAGbwB,eACC,OAAOlG,KAAKwE,YAGb2B,eACC,OAAOnG,KAAKuE,WAAWwB,SAGjBlG,oBAAoBuG,EAAiBC,GAC3C,MAAMC,EAActG,KAAKuE,WAAWsB,WAAWU,OAAQnI,GAAUA,EAAMT,OAASyI,GAEhF,GAA2B,IAAvBE,EAAYhG,OACf,MAAM,IAAIkG,uCAAuCJ,mBAGlDpG,KAAK0E,cAAc+B,KAAM9I,KAAMyI,EAASjB,GAAImB,EAAa,GAAInB,IAAMkB,GAG7DxG,kBAAkB6G,EAAuBC,GAC/C,IAAK,MAAQhJ,EAAMuD,KAAUlB,KAAK0E,cACjC,GAAI/G,EAAKA,OAAS+I,EAAe,CAChC1G,KAAK0E,cAAckC,OAAOjJ,GAC1BqC,KAAK0E,cAAc+B,KAAM9I,KAAM+I,EAAevB,GAAIwB,GAAezF,GACjE,OAKIrB,kBAAkBgH,EAAqBrC,GAC7C,MAAMsC,EAAa9G,KAAKuE,WAAWuB,SAASS,OAAQQ,GAAYA,EAAQpJ,OAASkJ,GAEjF,GAA0B,IAAtBC,EAAWxG,OACd,MAAM,IAAIkG,qCAAqCK,mBAGhD7G,KAAKwE,YAAYiC,KAAM9I,KAAMkJ,EAAa1B,GAAI2B,EAAY,GAAI3B,IAAMX,GAG9D3E,gBAAgBgH,EAAqBG,GAC3C,IAAK,MAAQrJ,EAAMuD,KAAUlB,KAAKwE,YACjC,GAAI7G,EAAKA,OAASkJ,EAAa,CAC9B7G,KAAKwE,YAAYoC,OAAOjJ,GACxBqC,KAAKwE,YAAYiC,KAAM9I,KAAMkJ,EAAa1B,GAAI6B,GAAa9F,GAC3D,OAKKrB,cAAc8E,EAA2BC,EAAkBqC,GAClE,MAAMC,EAAWvC,EAAGwC,aAAavC,GASjC,OAPAD,EAAGyC,aAAaF,EAAUD,GAC1BtC,EAAG0C,cAAcH,GACZvC,EAAG2C,mBAAmBJ,EAAUvC,EAAG4C,iBAEvCC,QAAQC,oCAAoC9C,EAAG+C,iBAAiBR,MAG1DA,mFCpIT,MAAA1G,EAAAtD,EAAA,GAKAN,EAAA+K,YAOC9H,cACCG,KAAK4H,QAAU,IAAInD,IACnBzE,KAAK6H,eACL7H,KAAK8H,OAAS,KACd9H,KAAK+H,UAAY,KACjB/H,KAAKgI,eAAgB,EAGfnI,eAAeoI,GACrBjI,KAAK6H,YAAYjC,QAAQqC,GAGnBpI,UAAUiI,GAChB9H,KAAK8H,OAASA,EAGRjI,UAAU8E,EAA2BC,EAAkB1D,GAC7D,MAAMgH,EAAY,IAAI1H,EAAAC,QAEC,OAAnBT,KAAK+H,YACR/H,KAAK+H,UAAYpD,EAAGwD,iBAGrBD,EAAUE,gBAAgBzD,EAAIC,EAAM1D,GACpCyD,EAAG0D,aAAarI,KAAK+H,UAAWG,EAAUlC,IAE1ChG,KAAK4H,QAAQnB,IAAI7B,EAAMsD,GAGjBrI,OAAOyI,GACb,IAAKtI,KAAK4H,QAAQW,IAAID,GACrB,MAAM,IAAIlE,yCAAyCkE,cAEpD,OAAOtI,KAAK4H,QAAQ1J,IAAIoK,GAGlBzI,OAAO8E,GACb3E,KAAKwI,eAAe7D,GAGpB,IAAK,MAAM8D,KAAWzI,KAAK6H,YAC1BY,EAAQC,aAAa/D,EAAI3E,KAAK+H,WAC9B/H,KAAK2I,iBAAiBhE,GAEtBA,EAAGiE,WAAWjE,EAAGkE,eAAgB,EAAGJ,EAAQK,gBAQtCjJ,iBAAiB8E,GACxB,IAAK,MAAM2D,KAAUtI,KAAK4H,QAAQmB,SAAU,CAC3C,MAAMlD,EAAayC,EAAOrC,WAE1B,IAAK,MAAQG,EAAS4C,KAAanD,EAAY,CAC9C,IAAoB,IAAhBO,EAAQjB,GAAW,CACtB,MAAM8D,EAAQtE,EAAGuE,kBAAkBlJ,KAAK+H,UAAW3B,EAAQzI,MAC3DyI,EAAQjB,GAAK8D,EAEbX,EAAOa,kBAAkB/C,EAAQzI,KAAMsL,GAIxC,GAFAtE,EAAGyE,wBAAwBhD,EAAQjB,IAE/B6D,EAAQK,gBACX1E,EAAG2E,oBACFlD,EAAQjB,GACR6D,EAAQK,gBAAgBE,KACxB5E,EAAG6E,MACHR,EAAQK,gBAAgBI,WACxBT,EAAQK,gBAAgBK,OACxBV,EAAQK,gBAAgBM,aAEnB,GAAIX,EAAQY,eAGlB,OAFYZ,EAAQY,eAAetJ,QAGlC,KAAK,EACJqE,EAAGkF,gBAAgBzD,EAAQjB,GAAc6D,EAAQY,gBACjD,MACD,KAAK,EACJjF,EAAGmF,gBAAgB1D,EAAQjB,GAAc6D,EAAQY,gBACjD,MACD,KAAK,EACJjF,EAAGoF,gBAAgB3D,EAAQjB,GAAc6D,EAAQY,gBACjD,MACD,KAAK,EACJjF,EAAGqF,gBAAgB5D,EAAQjB,GAAc6D,EAAQY,mBAS/C/J,eAAe8E,GACjB3E,KAAKgI,gBACThI,KAAKgI,eAAgB,EACrBrD,EAAGsF,YAAYjK,KAAK+H,WAEfpD,EAAGuF,oBAAoBlK,KAAK+H,UAAWpD,EAAGwF,cAC9C3C,QAAQC,oCAAoC9C,EAAGyF,kBAAkBpK,KAAK+H,eAGxEpD,EAAG0F,WAAWrK,KAAK+H,WAGnB,IAAK,MAAMO,KAAUtI,KAAK4H,QAAQmB,SAAU,CAC3C,MAAMjD,EAAWwC,EAAOpC,SAExB,IAAK,MAAQW,EAAarC,KAAiBsB,EAAU,CACpD,IAAwB,IAApBe,EAAY1B,GAAW,CAC1B,MAAM8D,EAAQtE,EAAG2F,mBAAmBtK,KAAK+H,UAAWlB,EAAYlJ,MAChEkJ,EAAY1B,GAAK8D,EAEjBX,EAAOiC,gBAAgB1D,EAAYlJ,KAAMsL,GAM1C,GAHIzE,EAAYgG,YACf7F,EAAG8F,iBAAiB5D,EAAY1B,IAAI,EAAOX,EAAYgG,WAAWE,WAE/DlG,EAAYmG,UAGf,OAFYnG,EAAYmG,UAAUrK,QAGjC,KAAK,EACJqE,EAAGiG,WAAW/D,EAAY1B,GAAIX,EAAYmG,WAC3C,KAAK,EACJhG,EAAGkG,WAAWhE,EAAY1B,GAAIX,EAAYmG,WAC3C,KAAK,EACJhG,EAAGmG,WAAWjE,EAAY1B,GAAIX,EAAYmG,WAC3C,KAAK,EACJhG,EAAGoG,WAAWlE,EAAY1B,GAAIX,EAAYmG,+FCzIjD/N,EAAAoO,aAMCnL,YAAYC,EAAWC,EAAW8C,EAAeC,GAChD9C,KAAKiL,SAAW,KAChBjL,KAAKkL,IAAM,IAAI3K,aAAa,IAC5BP,KAAKmL,WAAa,IAAI1G,IAEtBzE,KAAKkL,IAAK,GAAMpL,EAChBE,KAAKkL,IAAK,GAAMnL,EAChBC,KAAKkL,IAAK,GAAM,EAChBlL,KAAKkL,IAAK,GAAM,EAChBlL,KAAKkL,IAAK,GAAM,EAChBlL,KAAKkL,IAAK,GAAM,EAEhBlL,KAAKkL,IAAK,GAAMpL,EAAI+C,EACpB7C,KAAKkL,IAAK,GAAMnL,EAChBC,KAAKkL,IAAK,GAAM,EAChBlL,KAAKkL,IAAK,GAAM,EAChBlL,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EAEjBlL,KAAKkL,IAAK,IAAOpL,EACjBE,KAAKkL,IAAK,IAAOnL,EAAI+C,EACrB9C,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EAEjBlL,KAAKkL,IAAK,IAAOpL,EAAI+C,EACrB7C,KAAKkL,IAAK,IAAOnL,EAAI+C,EACrB9C,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EACjBlL,KAAKkL,IAAK,IAAO,EAGXrL,eACN,OAAO,EAGDA,SAAS1B,EAAWiN,EAAWC,EAAWC,GAChD,IAAK,IAAIlO,EAAI,EAAGA,EAAI4C,KAAKkL,IAAI5K,OAAQlD,GAAK,EACzC4C,KAAKkL,IAAI9N,KAAOe,EAAI,IACpB6B,KAAKkL,IAAI9N,KAAOgO,EAAI,IACpBpL,KAAKkL,IAAI9N,KAAOiO,EAAI,IACpBrL,KAAKkL,IAAI9N,KAAOkO,EAAI,IAIfzL,aACN,MAAM,IAAIuE,MAAM,2BAIVvE,mBACN,OACC0J,KAAM,EACNE,YAAY,EACZC,OAAQ,GACRC,OAAQ,GAKH9J,kBACN,OACC0J,KAAM,EACNE,YAAY,EACZC,OAAQ,GACRC,OAAQ,GAIH9J,aAAa8E,EAA2B4G,GACxB,OAAlBvL,KAAKiL,WACRjL,KAAKiL,SAAWtG,EAAG6G,gBAGpB7G,EAAG8G,WAAW9G,EAAG+G,aAAc1L,KAAKiL,UACpCtG,EAAGgH,WAAWhH,EAAG+G,aAAc1L,KAAKkL,IAAKvG,EAAGiH,8FC5F9C,IAAAC,EAAA3O,EAAA,IAASN,EAAAoO,OAAAa,EAAAb,OACT,IAAAc,EAAA5O,EAAA,IAASN,EAAA+K,MAAAmE,EAAAnE,MACT,IAAAoE,EAAA7O,EAAA,GAASN,EAAA+F,cAAAoJ,EAAApJ,cACT,IAAAqJ,EAAA9O,EAAA,GAASN,EAAAyF,mBAAA2J,EAAA3J,mBAAoBzF,EAAA4F,kBAAAwJ,EAAAxJ,kBAC7B,IAAAhC,EAAAtD,EAAA,GAASN,EAAA8D,OAAAF,EAAAC,QAAmB7D,EAAA+D,WAAAH,EAAAG,uEAC5BsL,CAAA/O,EAAA","file":"agent.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Agent\"] = factory();\n\telse\n\t\troot[\"Agent\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import { IOrthoDimension } from '../camera';\n\nexport { Vector2 } from './vector2';\nexport { Vector3 } from './vector3';\nexport { Matrix4 } from './matrix4';\n\n\nexport enum Axis {\n\tX,\n\tY,\n\tZ,\n}\n\nexport interface IPoint {\n\treadonly x: number;\n\treadonly y: number;\n\treadonly z: number;\n}\n\nexport interface IVector extends IPoint {\n\t/**\n\t * Add a vector\n\t * @param {IVector | IPoint}\tvec\ta vector object\n\t * @returns {IVector}\ta new Vector\n\t */\n\tadd(vec: IVector): IVector;\n\n\t/**\n\t * Subtract a vector\n\t * @param {IVector}  vec  a vector object\n\t * @returns {IVector}\ta new Vector\n\t */\n\tsub(vec: IVector): IVector;\n\n\t/**\n\t * Divide a vector\n\t * @param {IVector}  vec  a vector object\n\t * @returns {IVector}\ta new Vector\n\t */\n\tdiv(vec: IVector): IVector | TypeError;\n\n\t/**\n\t * Multiply a vector\n\t * @param {IVector}  vec  a vector object\n\t * @returns {IVector}\ta new Vector\n\t */\n\tmult(vec: IVector): IVector;\n\n\t/**\n\t * Dot product a vector\n\t * @param {IVector}  vec  a vector object\n\t * @returns {number}\tthe number representing the dot product\n\t */\n\tdot(vec: IVector): number;\n\n\t/**\n\t * Scale a vector\n\t * @param {number}  scaler  the value to scale by\n\t\t* @returns {IVector}\ta new scaled Vector\n\t */\n\tscale(scaler: number): IVector;\n\n\t/**\n\t * Normalize a vector\n\t * @returns {IVector}\ta new normalized Vector\n\t */\n\tnormalize(): IVector;\n\n\t/**\n\t * Magnitude of a vector\n\t * @returns {number}\tthe length of the vector\n\t */\n\tlength(): number;\n\n\t/**\n\t * Flatten to a float32array\n\t * @returns {Float32Array} the float32array of x, y, z\n\t */\n\tflatten(): Float32Array;\n}\n\nexport interface IMatrix {\n\t/**\n\t * Change the matrix to an identity matrix\n\t * @return {void}\n\t */\n\tsetAsIdentity(): void;\n\n\t/**\n\t * Change the matrix to a orthographic projection matrix\n\t * @returns {void}\n\t */\n\tsetAsOrthographic(dimension: IOrthoDimension): void;\n\n\t/**\n\t * Change the matrix to a perspective projection matrix\n\t * @returns {void}\n\t */\n\tsetAsPerspective(): void;\n\n\t/**\n\t * return a new scaled matrix\n\t * @param {number} scaler   the value to scale the matrix\n\t * @return {IMatrix}  the new scaled matrix\n\t */\n\tscale(scaler: number): IMatrix;\n\n\t/**\n\t * return a new translated matrix\n\t * @param {IVector} vec   the vector to translate by\n\t * @return {IMatrix}  the new translated matrix\n\t */\n\ttranslate(vec: IVector): IMatrix;\n\n\t/**\n\t * return a new rotated matrix\n\t * @param {number} theta   the degree or radian to rotate by\n\t * @param {Axis} axis   the axis to rotate by\n\t * @return {IMatrix}  the new rotated matrix\n\t */\n\trotate(theta: number, axis: Axis): IMatrix;\n\n\t/**\n\t * return the matrix data as a Float32Array\n\t * @return {Flaot32Array}  the matrix data as an array\n\t */\n\tflatten(): Float32Array;\n}\n\n/**\n * convert degree to radian\n * @param {number} deg  the degree to convert\n * @return {number}   the degree represented in radian\n */\nexport function toRadian(deg: number): number {\n\tconst rad = (deg / 360) * 2 * Math.PI;\n\treturn parseFloat(rad.toFixed(5));\n}\n\n/**\n * convert radian to degree\n * @param {number} rad  the radian to convert\n * @return {number}   the degree\n */\nexport function toDegree(rad: number): number {\n\treturn Math.round((rad / (2 * Math.PI)) * 360);\n}\n","import { IVector, IPoint } from '../math';\n\n\nexport class Vector2 implements IVector {\n\tpublic readonly x: number;\n\tpublic readonly y: number;\n\tpublic readonly z: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = 0;\n\t}\n\n\tpublic add(vec: IPoint | Vector2): Vector2 {\n\t\treturn new Vector2(vec.x + this.x, vec.y + this.y);\n\t}\n\n\tpublic sub(vec: IPoint | Vector2): Vector2 {\n\t\treturn new Vector2(this.x - vec.x, this.y - vec.y);\n\t}\n\n\tpublic mult(vec: IPoint | Vector2): Vector2 {\n\t\treturn new Vector2(this.x * vec.x, this.y * vec.y);\n\t}\n\n\tpublic div(vec: IPoint | Vector2): Vector2 | TypeError {\n\t\tif (vec.x === 0 || vec.y === 0) {\n\t\t\tthrow new TypeError(`Can not divide by zero x:${vec.x} y:${vec.y}`);\n\t\t}\n\t\treturn new Vector2(this.x / vec.x, this.y / vec.y);\n\t}\n\n\tpublic dot(vec: IPoint | Vector2): number {\n\t\treturn (this.x * vec.x) + (this.y * vec.y);\n\t}\n\n\tpublic length(): number {\n\t\treturn Math.sqrt((this.x * this.x) + (this.y * this.y));\n\t}\n\n\tpublic scale(scaler: number): Vector2 {\n\t\treturn new Vector2(this.x * scaler, this.y * scaler);\n\t}\n\n\tpublic normalize(): Vector2 {\n\t\tconst l = this.length();\n\t\treturn new Vector2(this.x / l, this.y / l);\n\t}\n\n\tpublic flatten(): Float32Array {\n\t\treturn new Float32Array([this.x, this.y]);\n\t}\n}\n","import { Matrix4 } from '../math';\n\nexport { Shader as default } from './shader';\n\nexport enum ShaderType {\n\tVertex = WebGLRenderingContext.VERTEX_SHADER,\n\tFragment = WebGLRenderingContext.FRAGMENT_SHADER,\n}\n\nexport interface IShaderAttributeName {\n\tname: string;\n\tid: number | WebGLUniformLocation;\n}\n\nexport interface IVertexAttribute {\n\treadonly size: number;\n\treadonly normalized: boolean;\n\treadonly stride: number;\n\treadonly offset: number;\n}\n\nexport interface IAttributeValue {\n\treadonly vertexAttribute?: IVertexAttribute;\n\treadonly attributeValue?: Float32Array;\n}\n\nexport interface IUniformValue {\n\treadonly dataMatrix?: Matrix4;\n\treadonly dataValue?: Float32Array;\n}\n","import { Vector2 } from './vector2';\nimport { IOrthoDimension } from '../camera';\nimport { IMatrix, IPoint, IVector, Axis } from '../math';\n\n\nexport class Matrix4 implements IMatrix {\n\tprivate data: Float32Array;\n\n\tconstructor(arr?: Float32Array) {\n\t\tif (arr !== undefined && arr.length === 16) {\n\t\t\tthis.data = arr.map((value) => value);\n\n\t\t} else {\n\t\t\tthis.data = new Float32Array(16);\n\n\t\t\tthis.data[ 0 ] = 1;\n\t\t\tthis.data[ 5 ] = 1;\n\t\t\tthis.data[ 10 ] = 1;\n\t\t\tthis.data[ 15 ] = 1;\n\t\t}\n\t}\n\n\tpublic setAsIdentity(): void {\n\t\tthis.data.fill(0);\n\n\t\tthis.data[ 0 ] = 1;\n\t\tthis.data[ 5 ] = 1;\n\t\tthis.data[ 10 ] = 1;\n\t\tthis.data[ 15 ] = 1;\n\t}\n\n\tpublic setAsOrthographic(dimension: IOrthoDimension) {\n\t\tthis.setAsIdentity();\n\n\t\tthis.data[ 0 ] = 2 / (dimension.right - dimension.left);\n\t\tthis.data[ 5 ] = 2 / (dimension.top - dimension.bottom);\n\t\tthis.data[ 10 ] = -2 / (dimension.far - dimension.near);\n\t\tthis.data[ 12 ] = -1 * ((dimension.right + dimension.left) / (dimension.right - dimension.left));\n\t\tthis.data[ 13 ] = -1 * ((dimension.top + dimension.bottom) / (dimension.top - dimension.bottom));\n\t\tthis.data[ 14 ] = -1 * ((dimension.far + dimension.near) / (dimension.far - dimension.near));\n\t}\n\n\tpublic setAsPerspective() {\n\t\t// TODO\n\t}\n\n\tpublic scale(scaler: IPoint | number): Matrix4 {\n\t\tlet x = 1;\n\t\tlet y = 1;\n\t\tlet z = 1;\n\t\tconst _mat = new Matrix4(this.data);\n\n\t\tif (typeof scaler === 'object') {\n\t\t\tx = scaler.x;\n\t\t\ty = scaler.y;\n\t\t\tz = scaler.z || 1;\n\t\t} else {\n\t\t\tx = scaler;\n\t\t\ty = scaler;\n\t\t\tz = scaler;\n\t\t}\n\n\t\t_mat.data[ 0 ] *= x;\n\t\t_mat.data[ 5 ] *= y;\n\t\t_mat.data[ 10 ] *= z;\n\n\t\treturn _mat;\n\t}\n\n\tpublic translate(vec: IVector | IPoint): Matrix4 {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet z = 0;\n\t\tconst _mat = new Matrix4(this.data);\n\n\t\tif (vec instanceof Vector2) {\n\t\t\tx = vec.x;\n\t\t\ty = vec.y;\n\t\t\tz = 0;\n\n\t\t} else {\n\t\t\tx = vec.x;\n\t\t\ty = vec.y;\n\t\t\tz = vec.z || 0;\n\t\t}\n\n\t\t_mat.data[ 12 ] += x;\n\t\t_mat.data[ 13 ] += y;\n\t\t_mat.data[ 14 ] += z;\n\n\t\treturn _mat;\n\t}\n\n\tpublic rotate(theta: number, axis: Axis): Matrix4 {\n\t\tconst _mat = new Matrix4(this.data);\n\n\t\tswitch (axis) {\n\t\t\tcase Axis.X:\n\t\t\t_mat.data[ 5 ] *= Math.cos(theta);\n\t\t\t_mat.data[ 6 ] *= Math.sin(theta);\n\t\t\t_mat.data[ 9 ] *= -(Math.sin(theta));\n\t\t\t_mat.data[ 10 ] *= Math.cos(theta);\n\t\t\tbreak;\n\n\t\t\tcase Axis.Y:\n\t\t\t_mat.data[ 0 ] *= Math.cos(theta);\n\t\t\t_mat.data[ 2 ] *= -(Math.sin(theta));\n\t\t\t_mat.data[ 8 ] *= Math.sin(theta);\n\t\t\t_mat.data[ 10 ] *= Math.cos(theta);\n\t\t\tbreak;\n\n\t\t\tcase Axis.Z:\n\t\t\t_mat.data[ 0 ] *= Math.cos(theta);\n\t\t\t_mat.data[ 1 ] *= Math.sin(theta);\n\t\t\t_mat.data[ 4 ] *= -(Math.sin(theta));\n\t\t\t_mat.data[ 5 ] *= Math.cos(theta);\n\t\t\tbreak;\n\t\t}\n\n\t\treturn _mat;\n\t}\n\n\tpublic flatten(): Float32Array {\n\t\treturn this.data;\n\t}\n}\n","import { IVector, IPoint } from '../math';\n\n\nexport class Vector3 implements IVector {\n\tpublic readonly x: number;\n\tpublic readonly y: number;\n\tpublic readonly z: number;\n\n\tconstructor(x: number = 0, y: number = 0, z: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tpublic add(vec: IPoint | IVector): Vector3 {\n\t\treturn new Vector3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\n\t}\n\n\tpublic sub(vec: IPoint | IVector): Vector3 {\n\t\treturn new Vector3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\n\t}\n\n\tpublic div(vec: IPoint | IVector): Vector3 | TypeError {\n\t\tif (vec.x === 0 || vec.y === 0 || vec.z === 0) {\n\t\t\tthrow new TypeError(`Can not divide by zero x:${vec.x} y:${vec.y} z: ${vec.z}`);\n\t\t}\n\t\treturn new Vector3(this.x / vec.x, this.y / vec.y, this.z / vec.z);\n\t}\n\n\tpublic mult(vec: IPoint | IVector): Vector3 {\n\t\treturn new Vector3(this.x * vec.x, this.y * vec.y, this.z * vec.z);\n\t}\n\n\tpublic dot(vec: IPoint | IVector): number {\n\t\treturn (this.x * vec.x) + (this.y * vec.y) + (this.z * vec.z);\n\t}\n\n\tpublic scale(scaler: number): Vector3 {\n\t\treturn new Vector3(this.x * scaler, this.y * scaler, this.z * scaler);\n\t}\n\n\tpublic normalize(): IVector {\n\t\tconst l = this.length();\n\t\treturn new Vector3(this.x / l, this.y / l, this.z / l);\n\t}\n\n\tpublic length(): number {\n\t\treturn Math.sqrt(( this.x * this.x ) + ( this.y * this.y ) + ( this.z * this.z ));\n\t}\n\n\tpublic flatten(): Float32Array {\n\t\treturn new Float32Array([this.x, this.y, this.z]);\n\t}\n}\n","import { Matrix4 } from '../math';\nimport { ICamera } from '.';\n\n\nexport interface IOrthoDimension {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n\tnear: number;\n\tfar: number;\n}\n\nexport class OrthographicCamera implements ICamera {\n\tprivate cameraMatrix: Matrix4;\n\tprivate dimension: IOrthoDimension;\n\n\tconstructor(dimension: IOrthoDimension) {\n\t\tthis.dimension = dimension;\n\t\tthis.cameraMatrix = new Matrix4();\n\t\tthis.cameraMatrix.setAsOrthographic(dimension);\n\t}\n\n\tpublic matrix(): Matrix4 {\n\t\treturn this.cameraMatrix;\n\t}\n}\n","import { Matrix4 } from '../math';\nimport { ICamera } from '.';\n\n\n// export class PerspectiveCamera implements ICamera {\nexport class PerspectiveCamera implements ICamera {\n\tprivate cameraMatrix: Matrix4;\n\n\tconstructor() {\n\t\t// TODO\n\t}\n\n\tpublic matrix(): Matrix4 {\n\t\treturn this.cameraMatrix;\n\t}\n}\n","import { Matrix4 } from '../math';\n\nexport { PerspectiveCamera } from './perspective';\nexport { OrthographicCamera, IOrthoDimension } from './orthographic';\n\n\nexport interface ICamera {\n\tmatrix(): Matrix4;\n}\n","import { IRenderer, IRenderOptions } from '../renderer';\nimport { Scene } from '../scene/scene';\n\n\nexport class WebGLRenderer implements IRenderer {\n\tprivate width: number;\n\tprivate height: number;\n\tprivate devicePixelRatio: number;\n\tprivate canvas: HTMLCanvasElement;\n\tprivate _glCtx: WebGLRenderingContext;\n\n\tconstructor(options?: IRenderOptions) {\n\t\tthis.width = 0;\n\t\tthis.height = 0;\n\t\tthis.devicePixelRatio = 1;\n\t\tthis.canvas = null;\n\t\tthis._glCtx = null;\n\n\t\tif (options !== undefined) {\n\t\t\tthis.initWithOptions(options);\n\t\t}\n\t}\n\n\tpublic getContext(): WebGLRenderingContext {\n\t\treturn this._glCtx;\n\t}\n\n\tpublic aspect(): number {\n\t\treturn this.width / this.height;\n\t}\n\n\tpublic render(scene: Scene): void {\n\t\tthis.clear();\n\t\tscene.render(this._glCtx);\n\t}\n\n\tpublic resize(width: number, height: number): void {\n\t\tthis.canvas.width = this.width = width * this.devicePixelRatio;\n\t\tthis.canvas.height = this.height = height * this.devicePixelRatio;\n\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\tthis._glCtx.viewport(0, 0, this.width, this.height);\n\t}\n\n\tprivate clear(): void {\n\t\tthis._glCtx.clear(this._glCtx.COLOR_BUFFER_BIT | this._glCtx.DEPTH_BUFFER_BIT);\n\t}\n\n\tprivate initWithOptions(options: IRenderOptions): void {\n\t\tthis.width = options.width;\n\t\tthis.height = options.height;\n\t\tthis.devicePixelRatio = window.devicePixelRatio || 1;\n\n\t\tif (!options.domCanvas) {\n\t\t\tthis.canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas') as HTMLCanvasElement;\n\t\t\tdocument.body.appendChild(this.canvas);\n\n\t\t} else {\n\t\t\tthis.canvas = options.domCanvas;\n\t\t}\n\n\t\tif (options.fullscreen) {\n\t\t\tthis.width = document.body.clientWidth;\n\t\t\tthis.height = document.body.clientHeight;\n\t\t}\n\n\t\t// canvas size\n\t\tthis.canvas.style.width = this.width + 'px';\n\t\tthis.canvas.style.height = this.height + 'px';\n\n\t\t// drawing size\n\t\tthis.canvas.width = this.width * this.devicePixelRatio;\n\t\tthis.canvas.height = this.height * this.devicePixelRatio;\n\n\t\tif (!options.glContext) {\n\t\t\t// TODO handle rendering2Context\n\t\t\tthis._glCtx = this.canvas.getContext('webgl2') as WebGLRenderingContext || this.canvas.getContext('webgl') as WebGLRenderingContext;\n\n\t\t\tif (this._glCtx === null) {\n\t\t\t\tthrow new Error('glContext is null. Check WebGL compatibility');\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._glCtx = options.glContext;\n\t\t}\n\n\t\tthis._glCtx.viewport(0, 0, this.width, this.height);\n\t\tthis._glCtx.clearColor(1.0, 0.0, 1.0, 1.0);\n\t}\n}\n","import { ShaderType, IVertexAttribute } from '../shader';\nimport { Scene } from '../scene/scene';\n\nexport { WebGLRenderer } from '../renderer/webGLRenderer';\n\nexport interface IRenderable {\n\t/**\n\t * set the color of the renderable object\n\t * @param {number} r\tthe red value\n\t * @param {number} g\tthe green value\n\t * @param {number} b\tthe blue value\n\t * @param {number} a\tthe alpha value\n\t */\n\tsetColor(r: number, g: number, b: number, a: number): void;\n\n\t/**\n\t * set the renderable's texture\n\t */\n\tsetTexture(): void;\n\n\t/**\n\t * must be called at lease once before rendering the renderable.\n\t * This will bind and describe the buffer\n\t * @param {WebGLRenderingContext}\tgl\twebGLrendering context\n\t * @param {WebGLProgram}\tprogram\tthe program id for the shaders\n\t */\n\tenableBuffer(gl: WebGLRenderingContext, program: WebGLProgram): void;\n\n\t/**\n\t * return the number of vertices this renderable will have\n\t * @returns {number}\tthe number of vertices\n\t */\n\tverticeCount(): number;\n\n\t/**\n\t * get the vertexAttribute object for this renderalbe, describing how the vertex data is layed out per vertex\n\t * @returns\t{IVertexAttribute}\tobject describing vertex layout\n\t */\n\tvertexAttributes(): IVertexAttribute;\n\n\t/**\n\t * get the colorAttribute object for this renderalbe, describing how the color data is layed out per vertex\n\t * @returns\t{IVertexAttribute}\tobject describing color layout\n\t */\n\tcolorAttributes(): IVertexAttribute;\n}\n\nexport interface IRenderer {\n\taspect(): number;\n\trender(scene: Scene): void;\n\tresize(x: number, y: number): void;\n}\n\nexport interface IRenderOptions {\n\treadonly width: number;\n\treadonly height: number;\n\treadonly fullscreen?: boolean;\n\treadonly domCanvas?: HTMLCanvasElement;\n\treadonly glContext?: WebGLRenderingContext;\n}\n","import { ShaderType, IAttributeValue, IVertexAttribute, IShaderAttributeName, IUniformValue } from '.';\nimport { Matrix4,\tVector2,\tVector3 } from '../math';\n\n\ninterface IShaderData {\n\tid: WebGLShader;\n\ttype: ShaderType;\n\tcode: string;\n\tattributes: IShaderAttributeName[];\n\tuniforms: IShaderAttributeName[];\n\tvaryings: IShaderAttributeName[];\n}\n\nexport class Shader {\n\tprivate shaderData: IShaderData;\n\tprivate uniformData: Map<IShaderAttributeName, IUniformValue>;\n\tprivate attributeData: Map<IShaderAttributeName, IAttributeValue>;\n\n\tconstructor() {\n\t\tthis.shaderData = null;\n\t\tthis.uniformData = new Map();\n\t\tthis.attributeData = new Map();\n\t}\n\n\tpublic setShaderSource(gl: WebGLRenderingContext, type: ShaderType, code: string): void {\n\t\tconst tempAttr: IShaderAttributeName[] = [];\n\t\tconst tempUniform: IShaderAttributeName[] = [];\n\t\tconst tempVarying: IShaderAttributeName[] = [];\n\n\t\tconst lines = code.split('\\n');\n\t\tconst id = this.compileSource(gl, type, code);\n\n\t\tfor (const line of lines) {\n\t\t\tconst endIndex = line.charAt(line.length - 1) === ';' ? line.length - 1 : line.length;\n\t\t\tconst varName = line.substring(line.lastIndexOf(' ') + 1, endIndex);\n\n\t\t\tif (line.search(/^\\s*(attribute)/gi) !== -1) {\n\t\t\t\ttempAttr.push({\n\t\t\t\t\tname: varName,\n\t\t\t\t\tid: -1,\n\t\t\t\t});\n\n\t\t\t} else if (line.search(/^\\s*(uniform)/gi) !== -1) {\n\t\t\t\ttempUniform.push({\n\t\t\t\t\tname: varName,\n\t\t\t\t\tid: -1,\n\t\t\t\t});\n\n\t\t\t} else if (line.search(/^\\s*(varying)/gi) !== -1) {\n\t\t\t\ttempVarying.push({\n\t\t\t\t\tname: varName,\n\t\t\t\t\tid: -1,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.shaderData = {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tcode,\n\t\t\tattributes: tempAttr,\n\t\t\tuniforms: tempUniform,\n\t\t\tvaryings: tempVarying,\n\t\t};\n\t}\n\n\tpublic get ID(): WebGLShader {\n\t\treturn this.shaderData.id;\n\t}\n\n\tpublic get Attributes(): Map<IShaderAttributeName, IAttributeValue> {\n\t\treturn this.attributeData;\n\t}\n\n\tpublic get Uniforms(): Map<IShaderAttributeName, IUniformValue> {\n\t\treturn this.uniformData;\n\t}\n\n\tpublic get Varyings(): IShaderAttributeName[] {\n\t\treturn this.shaderData.varyings;\n\t}\n\n\tpublic setAttributeDataFor(attName: string, attribute: IAttributeValue): void {\n\t\tconst attLocation = this.shaderData.attributes.filter((value) => value.name === attName);\n\n\t\tif (attLocation.length === 0) {\n\t\t\tthrow new ReferenceError(`setAttributeDataFor: ${attName} was not found`);\n\t\t}\n\n\t\tthis.attributeData.set({ name: attName, id: attLocation[ 0 ].id }, attribute);\n\t}\n\n\tpublic setAttributeIDFor(attributeName: string, attributeID: number): void {\n\t\tfor (const [ name, data ] of this.attributeData) {\n\t\t\tif (name.name === attributeName) {\n\t\t\t\tthis.attributeData.delete(name);\n\t\t\t\tthis.attributeData.set({ name: attributeName, id: attributeID }, data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setUniformDataFor(uniformName: string, uniformData: IUniformValue): void {\n\t\tconst uniformLoc = this.shaderData.uniforms.filter((uniform) => uniform.name === uniformName);\n\n\t\tif (uniformLoc.length === 0) {\n\t\t\tthrow new ReferenceError(`setUniformDataFor: ${uniformName} was not found`);\n\t\t}\n\n\t\tthis.uniformData.set({ name: uniformName, id: uniformLoc[ 0 ].id }, uniformData);\n\t}\n\n\tpublic setUniformIDFor(uniformName: string, uniformID: WebGLUniformLocation): void {\n\t\tfor (const [ name, data ] of this.uniformData) {\n\t\t\tif (name.name === uniformName) {\n\t\t\t\tthis.uniformData.delete(name);\n\t\t\t\tthis.uniformData.set({ name: uniformName, id: uniformID }, data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate compileSource(gl: WebGLRenderingContext, type: ShaderType, source: string): WebGLShader {\n\t\tconst shaderID = gl.createShader(type);\n\n\t\tgl.shaderSource(shaderID, source);\n\t\tgl.compileShader(shaderID);\n\t\tif (!gl.getShaderParameter(shaderID, gl.COMPILE_STATUS)) {\n\t\t\t// should we throw, or setup a dispatch system?\n\t\t\tconsole.log(`Shader COMPILE_STATUS error: ${gl.getShaderInfoLog(shaderID)}`);\n\t\t}\n\n\t\treturn shaderID;\n\t}\n}\n","import Shader, { ShaderType } from '../shader';\nimport { IRenderable } from '../renderer';\nimport { ICamera } from '../camera';\n\n\nexport class Scene {\n\tprivate camera: ICamera;\n\tprivate renderables: IRenderable[];\n\tprivate shaders: Map<ShaderType, Shader>;\n\tprivate programId: WebGLProgram;\n\tprivate programLinked: boolean;\n\n\tconstructor() {\n\t\tthis.shaders = new Map<ShaderType, Shader>();\n\t\tthis.renderables = [];\n\t\tthis.camera = null;\n\t\tthis.programId = null;\n\t\tthis.programLinked = false;\n\t}\n\n\tpublic addDrawable(...item: IRenderable[]): void {\n\t\tthis.renderables.push(...item);\n\t}\n\n\tpublic addCamera(camera: ICamera): void {\n\t\tthis.camera = camera;\n\t}\n\n\tpublic addShader(gl: WebGLRenderingContext, type: ShaderType, data: string): void {\n\t\tconst newShader = new Shader();\n\n\t\tif (this.programId === null) {\n\t\t\tthis.programId = gl.createProgram();\n\t\t}\n\n\t\tnewShader.setShaderSource(gl, type, data);\n\t\tgl.attachShader(this.programId, newShader.ID);\n\n\t\tthis.shaders.set(type, newShader);\n\t}\n\n\tpublic shader(shader: ShaderType): Shader {\n\t\tif (!this.shaders.has(shader)) {\n\t\t\tthrow new Error(`Scene does not have shader type ${shader} assigned`);\n\t\t}\n\t\treturn this.shaders.get(shader);\n\t}\n\n\tpublic render(gl: WebGLRenderingContext) {\n\t\tthis.enableUniforms(gl);\n\n\t\t// TODO\n\t\tfor (const gObject of this.renderables) {\n\t\t\tgObject.enableBuffer(gl, this.programId);\n\t\t\tthis.enableAttributes(gl);\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, gObject.verticeCount());\n\t\t}\n\t}\n\n\t// this may not work when we get to renderables that describe the buffer data differently.\n\t// to solve this, we can pass the bufferID that we are currently describing.\n\t// or will it????????\n\t// TODO there are better ways to do this\n\tprivate enableAttributes(gl: WebGLRenderingContext): void {\n\t\tfor (const shader of this.shaders.values()) {\n\t\t\tconst attributes = shader.Attributes;\n\n\t\t\tfor (const [ attName, attData ] of attributes) {\n\t\t\t\tif (attName.id === -1) {\n\t\t\t\t\tconst newID = gl.getAttribLocation(this.programId, attName.name);\n\t\t\t\t\tattName.id = newID;\n\n\t\t\t\t\tshader.setAttributeIDFor(attName.name, newID);\n\t\t\t\t}\n\t\t\t\tgl.enableVertexAttribArray(attName.id as number);\n\n\t\t\t\tif (attData.vertexAttribute) {\n\t\t\t\t\tgl.vertexAttribPointer(\n\t\t\t\t\t\tattName.id as number,\n\t\t\t\t\t\tattData.vertexAttribute.size,\n\t\t\t\t\t\tgl.FLOAT,\n\t\t\t\t\t\tattData.vertexAttribute.normalized,\n\t\t\t\t\t\tattData.vertexAttribute.stride,\n\t\t\t\t\t\tattData.vertexAttribute.offset);\n\n\t\t\t\t} else if (attData.attributeValue) {\n\t\t\t\t\tconst len = attData.attributeValue.length;\n\n\t\t\t\t\tswitch (len) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tgl.vertexAttrib1fv(attName.id as number, attData.attributeValue);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tgl.vertexAttrib2fv(attName.id as number, attData.attributeValue);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tgl.vertexAttrib3fv(attName.id as number, attData.attributeValue);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tgl.vertexAttrib4fv(attName.id as number, attData.attributeValue);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// mabye move this to the shader class????\n\tprivate enableUniforms(gl: WebGLRenderingContext): void {\n\t\tif (!this.programLinked) {\n\t\t\tthis.programLinked = true;\n\t\t\tgl.linkProgram(this.programId);\n\n\t\t\tif (!gl.getProgramParameter(this.programId, gl.LINK_STATUS)) {\n\t\t\t\tconsole.log(`Error LINK_STATUS program Id ${gl.getProgramInfoLog(this.programId)}`);\n\t\t\t}\n\t\t}\n\t\tgl.useProgram(this.programId);\n\n\t\t// setup shader uniforms\n\t\tfor (const shader of this.shaders.values()) {\n\t\t\tconst uniforms = shader.Uniforms;\n\n\t\t\tfor (const [ uniformName, uniformData ] of uniforms) {\n\t\t\t\tif (uniformName.id === -1) {\n\t\t\t\t\tconst newID = gl.getUniformLocation(this.programId, uniformName.name);\n\t\t\t\t\tuniformName.id = newID;\n\n\t\t\t\t\tshader.setUniformIDFor(uniformName.name, newID);\n\t\t\t\t}\n\n\t\t\t\tif (uniformData.dataMatrix) {\n\t\t\t\t\tgl.uniformMatrix4fv(uniformName.id, false, uniformData.dataMatrix.flatten());\n\t\t\t\t}\n\t\t\t\tif (uniformData.dataValue) {\n\t\t\t\t\tconst len = uniformData.dataValue.length;\n\n\t\t\t\t\tswitch (len) {\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tgl.uniform1fv(uniformName.id, uniformData.dataValue);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tgl.uniform2fv(uniformName.id, uniformData.dataValue);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tgl.uniform3fv(uniformName.id, uniformData.dataValue);\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tgl.uniform4fv(uniformName.id, uniformData.dataValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { IRenderable } from '../renderer';\nimport { IAttributeValue, IVertexAttribute } from '../shader';\n\n\ninterface IAttributeName {\n\tname: string;\n\tid: number;\n}\n\nexport class Square implements IRenderable {\n\tprivate vbo: Float32Array;\n\tprivate bufferId: WebGLBuffer;\n\tprivate attribData: Map<IAttributeName, IAttributeValue>;\n\n\n\tconstructor(x: number, y: number, width: number, height: number) {\n\t\tthis.bufferId = null;\n\t\tthis.vbo = new Float32Array(24);\n\t\tthis.attribData = new Map();\n\n\t\tthis.vbo[ 0 ] = x;\n\t\tthis.vbo[ 1 ] = y;\n\t\tthis.vbo[ 2 ] = 0; // r\n\t\tthis.vbo[ 3 ] = 0; // g\n\t\tthis.vbo[ 4 ] = 0; // b\n\t\tthis.vbo[ 5 ] = 0; // a\n\n\t\tthis.vbo[ 6 ] = x + width;\n\t\tthis.vbo[ 7 ] = y;\n\t\tthis.vbo[ 8 ] = 0; // r\n\t\tthis.vbo[ 9 ] = 0; // g\n\t\tthis.vbo[ 10 ] = 0; // b\n\t\tthis.vbo[ 11 ] = 0; // a\n\n\t\tthis.vbo[ 12 ] = x;\n\t\tthis.vbo[ 13 ] = y + height;\n\t\tthis.vbo[ 14 ] = 0; // r\n\t\tthis.vbo[ 15 ] = 0; // g\n\t\tthis.vbo[ 16 ] = 0; // b\n\t\tthis.vbo[ 17 ] = 0; // a\n\n\t\tthis.vbo[ 18 ] = x + width;\n\t\tthis.vbo[ 19 ] = y + height;\n\t\tthis.vbo[ 20 ] = 0; // r\n\t\tthis.vbo[ 21 ] = 0; // g\n\t\tthis.vbo[ 22 ] = 0; // b\n\t\tthis.vbo[ 23 ] = 0; // a\n\t}\n\n\tpublic verticeCount(): number {\n\t\treturn 4;\n\t}\n\n\tpublic setColor(r: number, g: number, b: number, a: number): void {\n\t\tfor (let i = 2; i < this.vbo.length; i += 2) {\n\t\t\tthis.vbo[i++] = r % 256;\n\t\t\tthis.vbo[i++] = g % 256;\n\t\t\tthis.vbo[i++] = b % 256;\n\t\t\tthis.vbo[i++] = a % 256;\n\t\t}\n\t}\n\n\tpublic setTexture(): void {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\t// squares have a default buffer layout, so we can hard code\n\tpublic vertexAttributes(): IVertexAttribute {\n\t\treturn {\n\t\t\tsize: 2,\n\t\t\tnormalized: false,\n\t\t\tstride: 24,\n\t\t\toffset: 0,\n\t\t};\n\t}\n\n\t// squares have a default buffer layout, so we can hard code\n\tpublic colorAttributes(): IVertexAttribute {\n\t\treturn {\n\t\t\tsize: 4,\n\t\t\tnormalized: false,\n\t\t\tstride: 24,\n\t\t\toffset: 8,\n\t\t};\n\t}\n\n\tpublic enableBuffer(gl: WebGLRenderingContext, program: WebGLProgram): void {\n\t\tif (this.bufferId === null) {\n\t\t\tthis.bufferId = gl.createBuffer();\n\t\t}\n\t\t// bind our buffer\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.bufferId);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, this.vbo, gl.STATIC_DRAW);\n\t}\n}\n","export { Square } from './geometry/square';\nexport { Scene } from './scene/scene';\nexport { WebGLRenderer } from './renderer';\nexport { OrthographicCamera, PerspectiveCamera } from './camera';\nexport { default as Shader, ShaderType } from './shader';\nexport * from './math';\n"],"sourceRoot":""}